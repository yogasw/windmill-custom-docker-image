global
    daemon
    lua-load /etc/haproxy/log_response_body.lua
    log stdout format raw local0

defaults
    log global
    mode http
    option httplog
    option dontlognull

frontend http-in
    bind *:80
    option http-buffer-request
    
     # Agar bisa baca body-nya dulu
    http-request wait-for-body time 5s at-least 1
    http-request set-var(req.body) req.body

    # jika ingin menghindari null, bisa cek panjang body
    acl body_empty var(req.body) -m len 0
    http-request set-var(req.body) str("") if body_empty

    # Panggil Lua
    http-response lua.log_response_body
    http-request lua.read_full_request_body

    
    log-format '{"timestamp":"%t","level":"INFO","message":"INBOUND_REQUEST","status":"%ST","path":"%U","method":"%HM","ip":"%ci","params":"%HQ","body":"%[var(req.body)]"}'
    #target
    # log-format '{"timestamp":"%t","level":"INFO","message":"INBOUND_REQUEST","status":"%ST","path":"%U","method":"%HM","ip":"%ci","params":"%HQ","body":"%[var(req.body)]","user_agent":"%[hdr(user-agent)]","response_body":"%[var(res.body)]"}'

  http-response lua.log_response_body
    
    # Define ACLs for specific paths
    acl log_path1 path_reg ^/api/w/admins/jobs/run/f/u/.*
    acl log_path2 path_reg ^/api/w/[^/]+/jobs/run/.*
    acl log_path3 path_reg ^/api/r/.*

    # Set a variable to control logging
    http-request set-var(req.should_log) str(true) if log_path1 or log_path2 or log_path3

    # Only log if the path matches one of the defined ACLs
    http-request set-log-level silent if !log_path1 !log_path2 !log_path3

    default_backend servers

backend servers
    server server1 127.0.0.1:8000
