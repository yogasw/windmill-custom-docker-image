global
    daemon
    lua-load /etc/haproxy/log_response_body.lua
    log stdout format raw local0

defaults
    log global
    mode http
    option httplog
    option dontlognull

frontend http-in
    bind *:80

    # Panggil Lua
    # http-response lua.log_response_body
    # http-request lua.read_full_body

    # ------ LOG REQUEST----------
    #no log  ####this is real line USE THIS to disable log!!! when commented allows log
    mode http
    option http-buffer-request
    declare capture request len 40000000
    http-request capture req.body id 0
    capture request header user-agent len 150
    capture request header Host len 15
    
    log-format '{"timestamp":"%t","level":"INFO","message":"INBOUND_REQUEST","status":"%ST","path":"%U","method":"%[capture.req.method]","ip":"%[src]","user-agent":"%[capture.req.hdr(1),json(utf8s)]","uri":"%[capture.req.uri]","body":"%[capture.req.hdr(0)]"}'
   
    #target
    # log-format '{"timestamp":"%t","level":"INFO","message":"INBOUND_REQUEST","status":"%ST","path":"%U","method":"%HM","ip":"%ci","params":"%HQ","body":"%[var(req.body)]","user_agent":"%[hdr(user-agent)]","response_body":"%[var(res.body)]"}'

  http-response lua.log_response_body
    
    # Define ACLs for specific paths
    acl log_path1 path_reg ^/api/w/admins/jobs/run/f/u/.*
    acl log_path2 path_reg ^/api/w/[^/]+/jobs/run/.*
    acl log_path3 path_reg ^/api/r/.*

    # Set a variable to control logging
    http-request set-var(req.should_log) str(true) if log_path1 or log_path2 or log_path3

    # Only log if the path matches one of the defined ACLs
    http-request set-log-level silent if !log_path1 !log_path2 !log_path3

    default_backend servers

backend servers
    server server1 127.0.0.1:8000
